%pragma format=html
//==============================================================================================
//
//==============================================================================================
function Dump(variable,value) { print_debug(variable + " = " + value + "\n"); return; }
function dump(variable,value) { Dump(variable,value); return; }
function Here(value) { print_debug("HERE " + value + " HERE " + value + " HERE " + value + " HERE " + value + "\n"); return; }
function here(value) { Here(value); return; }

(function() {

	//==================================================================================================
	// Calculate difference in days between two dates, round up to the nearest integer
	//==================================================================================================
	daysBetween = function(date1, date2) {
	  var one_day = 1000*60*60*24; //1 day in milliseconds

	  // Convert both dates to milliseconds
	  var date1_ms = date1.getTime();
	  var date2_ms = date2.getTime();

	  // Calculate the difference in milliseconds
	  var difference_ms = date2_ms - date1_ms;
	    
	  // Convert back to days and return
	  return Math.ceil(difference_ms/one_day); 
	}

	//==================================================================================================
	// Write out a html client table
	//==================================================================================================
	writeTable = function(client, dataLines, deltaDays) {
		var debug=false;
		print_doc("<hr><h3>Client: " + client.toUpperCase() + "</h3>\n");
		var prevProject="";
		var first=true;
		var addRedNote=false, addGreenNote=false, addBlueNote=false;
		var spaceing = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
		// Data rows
		// if (dataLines.length > 1) prevProject=dataLines[1].project;
		dataLines.forEach(function(dataLine) {
			if (debug) { dump("\twriteTable -- dataLine",dataLine.toSource()); dump("\tprevProject",prevProject); }
			if (dataLine.project != prevProject) {
				if (!first) {
					print_doc("\t</table>\n")
					if (addGreenNote) print_doc("<p style=\"font-size:12px; line-height:0.4; margin-left:35px\">"
						+ "Note: Items in <font color=\"green\"><em>green</em></font> are completed items.</p>\n");
					if (addBlueNote) print_doc("<p style=\"font-size:12px; line-height:0.4; margin-left:35px\">"
						+ "Note: Items in <font color=\"blue\"><em>blue</em></font> are due within " + deltaDays + " days.</small></p>\n");
					if (addRedNote) print_doc("<p style=\"font-size:12px; line-height:0.4; margin-left:35px\">"
						+ "Note: Items in <font color=\"red\"><em>red</em></font> are over due.</small></p>\n");
					addRedNote=false, addGreenNote=false, addBlueNote=false;
					// print_doc("<br>\n")
				}
				projectString = "<a target=\"_blank\" href=\"https:\/\/" + client + "-next.editcl.com/admin/" + dataLine.project + "-summary/index.html\">" + dataLine.project + "</a>";

				print_doc("<h3>" + spaceing + projectString +  spaceing + "<small><em>(click on 'project' label to go to project baton page)</em></small></h3>");
				print_doc("\n\t<table style=\"margin-left:35px\">\n");
				print_doc("\t\t<tr>" 
					+ " <th align=\"left\">Milestone</th> <th align=\"left\">Due Date</th>"
					+ " <th align=\"left\">Status</th> <th align=\"center\">Days to Due</th> </tr>\n");
			}

			var fontStart = "", fontEnd = "";
			// projectString = "<a target=\"_blank\" href=\"https:\/\/" + client + "-next.editcl.com/admin/" + dataLine.project + "-summary/index.html\">" + dataLine.project + "</a>";
			if (dataLine.complete === "true") { 
					dataLine.complete = "Completed";
					dataLine.deltaDays = "";
					if (output === "all" || output === "active") {
						fontStart="<font color=\"green\">"; fontEnd="</font>"; addGreenNote=true;
						// dataLine.project = fontStart + dataLine.project + fontEnd;
						dataLine.label = fontStart + dataLine.label + fontEnd;
						dataLine.date = fontStart + dataLine.date + fontEnd;
						dataLine.complete = fontStart + dataLine.complete + fontEnd;
						dataLine.deltaDays = fontStart + dataLine.deltaDays + fontEnd;						
					}
			} else {
					dataLine.complete = "Active";
					if (output === "all" || output === "active") {
						if (dataLine.deltaDays < 0) {
							fontStart="<font color=\"red\"><em>"; fontEnd = "</em></font>"; addRedNote=true;
						} else if (dataLine.deltaDays <= deltaDays) { 
							fontStart="<font color=\"blue\"><em>"; fontEnd="</em></font>"; addBlueNote=true; 
						}
					}
					// dataLine.project = fontStart + dataLine.project + fontEnd;
					dataLine.label = fontStart + dataLine.label + fontEnd;
					dataLine.date = fontStart + dataLine.date + fontEnd;
					dataLine.complete = fontStart + dataLine.complete + fontEnd;
					dataLine.deltaDays = fontStart + dataLine.deltaDays + fontEnd;
			}
			print_doc("\t\t<tr>" 
					// + " <td>" + projectString + "</td>"
					+ " <td>" + dataLine.label + "</td>"
					+ " <td>" + dataLine.date + "</td>"
					+ " <td>" + dataLine.complete + "</td>"
					+ " <td align=\"center\">" + dataLine.deltaDays + "</td>"
					+ " </tr>\n");

		prevProject = dataLine.project;
		first=false;
		});
		print_doc("\t</table>\n")
		if (addGreenNote) print_doc("<p style=\"font-size:12px; line-height:0.4; margin-left:35px\">"
			+ "Note: Items in <font color=\"green\"><em>green</em></font> are completed items.</p>\n");
		if (addBlueNote) print_doc("<p style=\"font-size:12px; line-height:0.4; margin-left:35px\">"
			+ "Note: Items in <font color=\"blue\"><em>blue</em></font> are due within " + deltaDays + " days.</small></p>\n");
		if (addRedNote) print_doc("<p style=\"font-size:12px; line-height:0.4; margin-left:35px\">"
			+ "Note: Items in <font color=\"red\"><em>red</em></font> are over due.</small></p>\n");

		return;
	}

	//==================================================================================================
	// htmlReport -- Generate an html report, see MAIN for meaning of 'output'
	//==================================================================================================
	htmlReport = function(output, db, deltaDays, debug) {

		// Setup html page
		print_doc("\n<!DOCTYPE html>")
		print_doc("<html>\n");
		print_doc("<body>\n");
		print_doc("\t<h2>Courseleaf Baton summary report: " + output.toUpperCase() + "</h2>\n");
		print_doc("\t<p>" +  Date() + "</p>\n");

		// Get the milestone data from the transactional database
		var sqlStmt="select snapshots.client, snapshots.project, milestone.label, milestone.date,milestone.complete" 
					+ " from snapshots, milestone"
					+ " where milestone.key = snapshots.key and snapshots.archived is null"
					+ " and snapshots.client <> \"\""
					+ " order by snapshots.client, snapshots.project, milestone.rank"
		var resultSet = dbquery(db,sqlStmt);

		// Add results table to page
		if (resultSet.length > 0) {
			first=true;
			var prevClient="";
			var clientData=[];
			var foundActive=false;

			resultSet.forEach(function(result) {
				if (debug) dump("\nhtmlReport -- result", result.toSource());
				if (result.client != prevClient && !first) {
						if (foundActive) writeTable(prevClient, clientData, deltaDays);
						foundActive = false;
						clientData=[];
				} else {
					// calculate 'Days to due'
					result.deltaDays = daysBetween(new Date(),new Date(result.date));
					switch(output.toLowerCase()) {
						case "all": 
							clientData.push(result);
							break;
						case "active":
							if (result.complete === "false")
								clientData.push(result);
							break;
						case "due":
							if (result.complete === "false" && result.deltaDays <= deltaDays)
									clientData.push(result);
							break;
						case "late":
							if (result.complete === "false" && result.deltaDays < 0) {
									Here(2)
									clientData.push(result);
							}
							break;
					} //switch
				}

				if (result.complete != "true" || output.toLowerCase() === "all")
					foundActive=true;

				prevClient=result.client;
				// prevProject=result.project;
				first=false;
			});

			if (foundActive && clientData.length > 0) writeTable(prevClient, clientData, deltaDays);
		} else {
			print_doc("<p>*** Error -- Could not retrieve baton data from the '" +  db + "' database</p>\n");
		}

		// Close html page
		print_doc("\n\t</body>\n");
		print_doc("</html>\n");

		return;
	}


	//==================================================================================================
	// MAIN
	//==================================================================================================
	var debug=false;
	var output="all";
	if (http.output != undefined)
		output=http.output;

	var	deltaDays = 5;
	if (http.deltaDays != undefined)
		deltaDays=http.deltaDays;

	var db = "milestones";

	if (debug) print_debug("\n*** getMilestones.rjs starting ***\n");
	htmlReport(output.toLowerCase(), db, deltaDays, debug);

})(); // Call the function we just defined

