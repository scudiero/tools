
//======================================================================================================================
// return the program director data (director_or_minor) for the programs referenced in the eco system or listed on the form
//======================================================================================================================
// 02-20-18 - dgs - Initial coding - fordham
//======================================================================================================================
wffuncs.GetProg = function(inval, wfrule, args) {
	var myName=wfrule.attrname; wfDebug(1,"\n*** In " + myName + " called as '" + args.context + "/" + wfrule.searchfor + "', Step: '" + inval + "' ***");
	var options=wfrule.options;	if (options.indexOf(';') > 0) options=options.substring(0, options.indexOf(';'));
	var retArray=[];

	var reqType=wfrule.searchfor.toLowerCase();
	var notMode=reqType.indexOf('not')>=0;
	if (notMode === false)
		notMode=options.toLowerCase().indexOf('notmode')>=0;
	wfDebug(1,'\treqType = "'+reqType+'", notMode= "'+notMode+'", options= "'+ options);

	//Initial Checks
	try { InitialChecks(["wfrule","associated_programs"],args) }
	catch(err) { wfDebug(1,"\t" + myName + ": " + err + "\n") ; return false; }

	// Main
		var programadminKeys=[]
		// Get programs from the form
		var associatedPgms=getTCFValue("associated_programs.used_in_program", { delimiter: "\n", retarray: true });
		associatedPgms=RemoveDupes(associatedPgms.concat(getTCFValue("associated_programs.used_in_program", { delimiter: "\n", retarray: true , data: tcadata })));
			associatedPgms.forEach(function(text) {
			programadminKeys.push(text);
		});	

		// Get programs from the eco system
		proposalCodes=getTCFValue("code", { delimiter: "\n", retarray: true });
		proposalDepts=GetAttrVal({ request: "department", tcadata: tcadata});
		wfDump(1,["proposalCodes;"+proposalCodes.toSource(),"proposalDepts;"+proposalDepts.toSource()]);

		var sqlStmt="SELECT DISTINCT path,dept,type FROM courseref WHERE " + 
			" code in (\"" + proposalCodes.join('","') + "\")" +
			" and path like \"programcode:key%\" " +
			" and dept <> ''";
		if (proposalDepts.length > 0)
			sqlStmt = sqlStmt + " and dept not in (\"" + proposalDepts.join('","') + "\") "

		var resultSet=dbquery("courseref",sqlStmt);
		if(!resultSet.length) {
			wfDebug(0,"\t*** No eco system data found for " + proposalCodes.toSource());
		} else {
			resultSet.forEach(function(result) {
				programadminKeys.push(result.path.substring(result.path.indexOf("key")+3));
			});
		}		

		// Get the program directory from the programs
		programadminKeys.forEach(function(key) {
			var keyTcfData = load_tcf("/programadmin/" +  key + "/index.tcf");
			wfDump(0,["programadmin key;"+key,"\tdirector_or_minor;"+keyTcfData.director_or_minor,"\tdepartment;"+keyTcfData.department[0].code,])
			retArray.push(inval.replace(wfrule.regex,keyTcfData.director_or_minor));
		})

	// Return results -- date
		if(retArray.length > 0) {
			wfDebug(1,"\t*** Returning " + retArray.toSource());
			return retArray;
		}
		return false;

} //wffuncs.GetProg
