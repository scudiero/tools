//======================================================================================================================
// version:2.0.0 // -- dscudiero -- Thu 08/03/2017 @ 15:10:34.05
//======================================================================================================================
// Import the common code
wfLibName="/locallibs/workflowLib.atj"
%import %progdir%/locallibs/workflowLib.atj:atj;
//======================================================================================================================

/*
//======================================================================================================================
//
//======================================================================================================================
// 03-??-16 - dgs - Initial coding -- ???
//======================================================================================================================
wffuncs.xxxxxxxx = function(inval, wfrule, args) {
	var myName=wfrule.attrname;
	var myName=wfrule.attrname; wfDebug(1,"\n*** In " + myName + " called as '" + args.context + "/" + wfrule.searchfor + "', Step: '" + inval + "' ***");
	var options=wfrule.options;	options=options.substring(0, options.indexOf(';'));
	var retArray=[];

	var reqType=wfrule.searchfor.toLowerCase();
	var notMode=reqType.indexOf('not')>=0;
	if (notMode === false)
		notMode=options.toLowerCase().indexOf('notmode')>=0;
	wfDebug(1,'\treqType = "'+reqType+'", notMode= "'+notMode+'", options= "'+ options + '"\n');

	//Initial Checks
	try {
		InitialChecks(["wfrule","college","department"],args)
		if (tcfdata.college_prog[0].code != "DN")
	 		throw "*** Failed college_prog.code is not 'DN' check";
	 	if (tcfdata.acad_level[0].code != "GR")
	 		throw "*** Failed tcfdata.acad_level is not 'GR' check";
	} //try
	catch(err) { print_debug('\t' + myName + ": " + err + "\n") ; return false; }

	// Main
 		var allowStep=false;

	// Return results -- step
		if (notMode) allowStep=!allowStep
		if(allowStep) {
			wfDebug(0,"\t*** Allowing step")
			return [inval.replace(wfrule.ifregex,'')];
		}
		wfDebug(0,"\t*** Skipping step")
		return false

	// Return results -- date
		if(retArray.length > 0) {
			wfDebug(1,"\t*** Returning " + retArray.toSource())
			return retArray;
		}
		return false


} //xxxxxxxx
*/

//======================================================================================================================
// Check in log
//======================================================================================================================
// 08-03-2017 @ 15.12.23 - (34.05)     - dscudiero - moved out the common code to workflowLib
