//======================================================================================================================
// 10/25/17 - dgs - Initial - 
//======================================================================================================================
// Import the common setup and functions library
%import %progdir%/cim/util.atj:atj;
wfLibName="/locallibs/workflowLib.atj"
%import %progdir%/locallibs/workflowLib.atj:atj;
//======================================================================================================================

/*
//======================================================================================================================
//
//======================================================================================================================
// 03-??-16 - dgs - Initial coding -- ???
//======================================================================================================================
wffuncs.xxxxxxxx = function(inval, wfrule, args) {
	var myName=wfrule.attrname; wfDebug(1,"\n*** In " + myName + " called as '" + args.context + "/" + wfrule.searchfor + "', Step: '" + inval + "' ***");
	var options=wfrule.options;	if (options.indexOf(';') > 0) options=options.substring(0, options.indexOf(';'));
	var retArray=[];

	var reqType=wfrule.searchfor.toLowerCase();
	var notMode=reqType.indexOf('not')>=0;
	if (notMode === false)
		notMode=options.toLowerCase().indexOf('notmode')>=0;
	wfDebug(1,'\treqType = "'+reqType+'", notMode= "'+notMode+'", options= "'+ options + '"\n');

	//Initial Checks
	try { InitialChecks(["wfrule","college","department"],args) } //try
	catch(err) { wfDebug(1,"\t" + myName + ": " + err + "\n") ; return false; }

	// Main
 		var allowStep=false;

	// Return results -- step
		if (notMode) { wfDebug(3,"\t\tNot mode is active, flipping allowStep value"); allowStep=!allowStep; }
		if(allowStep) {
			wfDebug(0,"\t*** Allowing step");
			return [inval.replace(wfrule.ifregex,'')];
		}
		wfDebug(0,"\t*** Skipping step");
		return false;

	// Return results -- date
		if(retArray.length > 0) {
			wfDebug(1,"\t*** Returning " + retArray.toSource());
			return retArray;
		}
		return false;


} //xxxxxxxx
*/


//======================================================================================================================
// version:2.0.12 // -- dscudiero -- Tue 03/20/2018 @ 11:14:47.47
//======================================================================================================================
// Check in log
//======================================================================================================================
// 08-03-2017 @ 15.12.23 - (34.05)     - dscudiero - moved out the common code to workflowLib
// 08-08-2017 @ 10.54.18 - (13.67)     - dscudiero - Refactored to import mapper functioins
// 08-08-2017 @ 12.13.17 - (59.80)     - dscudiero - removed import of mapper functions file, moved to the workflowFuncs file
// 09-11-2017 @ 15.52.09 - (10.62)     - dscudiero - General syncing of dev to prod
// 09-25-2017 @ 15.42.14 - (57.02)     - dscudiero - Added a message if in not mode
// 10-04-2017 @ 07.46.52 - (31.96)     - dscudiero - Tweeaked catch statement to use wfDebug
// 10-25-2017 @ 09.40.56 - (13.59)     - dscudiero - Reformatted comments
// 11-10-2017 @ 12.37.57 - (18.91)     - dscudiero - Cleanup on setting the options variable
// 11-27-2017 @ 09.38.44 - (11.22)     - dscudiero - Added a include statement for util.atj
