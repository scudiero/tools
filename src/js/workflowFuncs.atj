//======================================================================================================================
// version:1.0.8 // -- dscudiero -- Fri 07/21/2017 @  7:19:00.61
//======================================================================================================================
// Workflow functions unique for this CIM instance
//======================================================================================================================
// ??/??/17-- dgs -- initial
// 04/10/17 - dgs -	Refactored initialization block, removed end of load messages
//======================================================================================================================
if (typeof wfFunctionsLoaded == "undefined") {
	//Get the CIM instance name
	var wfCimInstance=tcfdata.pagename[0].replace(/^\/([^\/]*)\/.*/, "/$1/");
	wfCimInstance=wfCimInstance.replace(/\//g, "");
	wfAllcodes=false;
	if (tcfdata.allcodes && tcfdata.allcodes.length >0)
		wfAllcodes=true;

	// If wfDebugLevel is set in the config file then set as global
	var wfDebugLevel=getTCFValue("wfDebugLevel");
	if (wfDebugLevel === "" ) wfDebugLevel=0;
	var wfDebugEnvs=getTCFValue("wfDebugEnvs");
	var host=getenv("HTTP_HOST").toLowerCase();

	// Debug environment, print info
	wfDebugEnvs="," + wfDebugEnvs + ",";
	var wfEnvIsDev=false;
	var wfEnv = "*unknown*";
	if (host.indexOf('.dev') > 0) { var wfEnv  ="dev"; wfEnvIsDev=true;
	} else if (host.indexOf('-test') > 0) { var wfEnv = "test";
	} else if (host.indexOf('-next') > 0) { var wfEnv = "next";
	}
	// If in a debug environment then print out stuff
	if (wfDebugEnvs.indexOf("," + wfEnv + ",") >= 0) {
		wfInDebugEnv=true;
		var wfProposalMode='EDIT'
		if (getTCFValue("newrecord") === "true") { var wfProposalMode='NEW';
		} else if (getTCFValue("deleterec") === "true") { var wfProposalMode='DELETE';
		}
		var d = new Date();
		var prtStr="\n" + Array(40).join("=") + " " + d.toString() + " " + Array(40).join("=") +
					"\n<<< Loading workflowFuncs.atj, proposal mode is " + wfProposalMode;
		if ( wfDebugLevel > 0 ) print_debug(prtStr);
	} else { wfInDebugEnv=false }
	//(host.indexOf(".dev") > 0)

	wfFunctionsLoaded=true;  // Scoped outside the module
} //(typeof wfFunctionsLoaded == "undefined")

//=======================================================================================================================
function wfDebug(text,mode) { return; } //wfDebug
function wfDump(varList,delimiter){ return; } //wfDump
//=======================================================================================================================
// Check if proposal is in EDIT mode
// 02/26/2015 - dgs - New
// 11/02/2016 - dgs - Streamlined
//=======================================================================================================================
wffuncs.IsEdit = function(inval, wfrule) {
	if (tcfdata.newrecord && tcfdata.newrecord.length && tcfdata.newrecord[0] == 'true')
		return false;
	if (tcfdata.deleterec && tcfdata.deleterec.length && tcfdata.deleterec[0] == 'true')
		return false;
	return [inval.replace(wfrule.ifregex,'')];
}; //IsEdit
//=======================================================================================================================
// Check if proposal is Not Delete
// 12/16/2016 - dgs - New
//=======================================================================================================================
wffuncs.IsNotDelete = function(inval, wfrule) {
	if (tcfdata.deleterec && tcfdata.deleterec.length && tcfdata.deleterec[0] == 'true')
		return false;
	return [inval.replace(wfrule.ifregex,'')];
}; //IsNotEdit
//=======================================================================================================================
// Check if proposal is Not Delete
// 12/16/2016 - dgs - New
//=======================================================================================================================
wffuncs.IsNotNew = function(inval, wfrule) {
	if (tcfdata.newrecord && tcfdata.newrecord.length && tcfdata.newrecord[0] == 'true')
		return false;
	return [inval.replace(wfrule.ifregex,'')];
}; //IsNotEdit

//=======================================================================================================================
// Return the proposal mode
// 01/25/2017 - dgs - New
//=======================================================================================================================
wffuncs.ProposalState = function(inval, wfrule, args) {
	wfDebug(4,"\n*** In ProposalState ***, called as: '" + inval + "'");
	var retVal='EDIT';
	if (tcfdata.newrecord && tcfdata.newrecord.length) {
		if (tcfdata.newrecord == 'true')
			retVal='NEW';
	}
	if (tcfdata.deleterec && tcfdata.deleterec.length) {
		if (tcfdata.deleterec == 'true')
			retVal='DELETE';
	}

	retVal=inval.replace(wfrule.regex,retVal);
	wfDebug(4,"\t*** Returning '" + retVal + "'\n")
	return [retVal]
}; //ProposalState

//======================================================================================================================
//======================================================================================================================


/*
//======================================================================================================================
//
//======================================================================================================================
// 03-??-16 - dgs - Initial coding -- ???
//======================================================================================================================
wffuncs.xxxxxxxx = function(inval, wfrule, args) {
	var myName=wfrule.attrname;
	var myName=wfrule.attrname; wfDebug(1,"\n*** In " + myName + " called as '" + args.context + "/" + wfrule.searchfor + "', Step: '" + inval + "' ***");
	var retArray=[];

	var reqType=wfrule.searchfor.toLowerCase();
	var notMode=reqType.indexOf("not")>0;
	wfDump(1,["reqType;"+reqType,"notMode;"+notMode]);

	//Initial Checks
	try {
		InitialChecks(["wfrule","college","department"],args)
		if (tcfdata.college_prog[0].code != "DN")
	 		throw "*** Failed college_prog.code is not 'DN' check";
	 	if (tcfdata.acad_level[0].code != "GR")
	 		throw "*** Failed tcfdata.acad_level is not 'GR' check";
	} //try
	catch(err) { print_debug('\t' + myName + ": " + err + "\n") ; return false; }

	// Main
 		var allowStep=false;

	// Return results -- step
		if (notMode) allowStep=!allowStep
		if(allowStep) {
			wfDebug(0,"\t*** Allowing step")
			return [inval.replace(wfrule.regex,'')];
		}
		wfDebug(0,"\t*** Skipping step")
		return false

	// Return results -- date
		if(retArray.length > 0) {
			wfDebug(1,"\t*** Returning " + retArray.toSource())
			return retArray;
		}
		return false


} //xxxxxxxx
*/


//======================================================================================================================
//======================================================================================================================
// Import workflow helper functions (workflowLib.atj) -- imported from localsteps
//======================================================================================================================
wfLibName="/locallibs/workflowLib.atj"
%import %progdir%/locallibs/workflowLib.atj:atj;

//======================================================================================================================
//======================================================================================================================
// Check in log
//======================================================================================================================
// Tue Mar 21 11:07:28 CDT 2017 - dscudiero - Added check in log comments
// 03-24-2017 @ 07.36.56 - (//)        - dscudiero - General syncing of dev to prod
// 05-11-2017 @ 14.55.28 - (//)        - dscudiero - refactored the begining stuff, removed loaded messages
// 05-22-2017 @ 08.11.47 - (//)        - dscudiero - General syncing of dev to prod
// 06-13-2017 @ 14.04.53 - (//)        - dscudiero - add setting wfAllcodes
// 07-21-2017 @ 13.17.08 - (//)        - dscudiero - add return data stanza
