//=================================================================================================
// version=1.0.5 // -- dscudiero -- 06/24/2016 @  7:23:02.36
//=================================================================================================
// Workflow functions for courseadmin
// Note: Expects the functions in workflowHelperFunctions.atj to have been imported (at bottom)
//=================================================================================================
//"use strict";
if (typeof wfFunctionsLoaded == "undefined") {
	var host=getenv("HTTP_HOST").toUpperCase() ;
	//if (host.indexOf('.DEV') > 0 || host.indexOf('-TEST.') > 0) {
	if (host.indexOf('.DEV') > 0) {
		var wfFunctionsLoaded=false;
		var wfProposalMode='EDIT';
		if (tcfdata.newrecord == 'true') {
			wfProposalMode='NEW';
		} else if (tcfdata.deleterec == 'true') {
			wfProposalMode='DELETE';
		}

		var prtStr="Loading ..." + tcfdata.wfPathbase.toString() + "custom-workflow.atj, proposal mode is " + wfProposalMode;
		//tmpArray=Array(100).join("=");
		var d = new Date();
		print_debug("\n" + Array(100).join("=") + "\n" + prtStr + "\n" + d.toString() + '\n');

		//Get a list of fields that have changed
		if (typeof tcfview.compare != "undefined") {
			var diffdata = {};
			tcfview.compare(tcfdata.key[0], {addwarnings: false, retdata: diffdata});
			if (!Object.keys(diffdata).length) {
				print_debug('\tNo Changes found in form data\n');
			} else {
				print_debug('\tChanged Fields:\n');
				for (var i in diffdata) {
					print_debug('\t' + i.toString() + ' (' + eval('tcfdata.' + i + '.toSource()') + ')\n');  // jshint ignore:line
					//Debug('&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp' + i.toString(),'s');
				}
			}
		}
	}
}
//==================================================================================================
// Check if propsal is in EDIT mode
// 02/26/2015 - dgs - New
//==================================================================================================
wffuncs.IsEdit = function(inval, wfrule) {
	if (tcfdata.newrecord && tcfdata.newrecord.length) {
		if (tcfdata.newrecord == 'true')
			return false;
	}
	if (tcfdata.deleterec && tcfdata.deleterec.length) {
		if (tcfdata.deleterec == 'true')
			return false;
	}
	return [inval.replace(wfrule.ifregex,'')];

}; //IsEdit
//=================================================================================================
// Import workflow helper functions (workflowLib.atj) -- imported from localsteps
//=================================================================================================
%import %progdir%/localsteps/workflowLib.atj:atj;
print_debug(Array(100).join("=") + "\n" + prtStr + "\n");
//=================================================================================================
//=================================================================================================

/*
//=================================================================================================
//
//=================================================================================================
// 03-??-16 - dgs - Initial coding -- ???
//=================================================================================================
wffuncs.xxxxxxxx = function(inval, wfrule, args) {
	var myName=wfrule.attrname; var haveDebug=false; if (typeof(Dump) == "function" && typeof(Debug) == "function") haveDebug=true;
	if (haveDebug) Debug('\n*** In '+ myName + " called as '" + wfrule.searchfor + ", Step: '" + inval +"' ***");
	//if (haveDebug) { Dump('\tinval',inval); Dump('\twfrule',wfrule.toSource()); Dump('\targs',args.toSource()); }

	var retArray=[];
	var reqType=wfrule.searchfor.toLowerCase();

	//Try block encapsulated main function
	 try {
		// Initial Checks
			InitialChecks(["wfrule","college","department"],args)
		// Value Checks
			if (tcfdata.college_prog[0].code != "DN")
		 		throw "*** Failed college_prog.code is not 'DN' check";
		 	if (tcfdata.acad_level[0].code != "GR")
		 		throw "*** Failed tcfdata.acad_level is not 'GR' check";

		// Main


		// Return results
			if (haveDebug) { retArray.forEach(function(step) { Dump('\tReturning step/workflow: ',step) }); }
			if (retArray.length > 0) {
				return retArray
			} else {
				return false;
			}

	} //Try block
	//Catch block for errors thrown in above try block
	catch(err) { if (haveDebug) { Debug("\t" + err + "\n\t*** Stopping"); } else { print_debug(myName + ": " + err + "\n") } return false; }
	return false;  // CYA, should never get here
} //xxxxxxxx
*/