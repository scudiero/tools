
In workflow.tcf
localsteps:Workflow Management|groups|workflow|attributes=isundergraduate[Is Undergraduate],fyi[FYI Only],isgraduate[Is Graduate],fyiall[FYI All],optional[If Exists],extreview[External Review];buttonlabel=Save;lookuptypes=user,role,workflow;memberlabel=Step;

In cimconfig.cfg
wfrules:isundergraduate|function|IsUndergraduate|       
wfrules:isgraduate|function|IsGraduate|  

in custom.atj
// Is graduate function, program type = PBC, CAS or Major(with Degree does not start with a 'B')  
wffuncs.IsGraduate = (function(inval, wfrule) {
                //print_debug('\n\nIsGraduate \n');
                //print_debug('\ninval = ' + inval + '\nwfrule =' + wfrule.toSource() + '\n');
                //print_debug('\program_type = ' + tcfdata.program_type.toSource() + '\n');
                //print_debug('\degreecode = ' + tcfdata.degreecode.toSource() + '\n');
                
                if (tcfdata.program_type[0].code == 'minor') 
                                return false;
                if (tcfdata.program_type[0].code == 'major' && tcfdata.degreecode[0].code.toUpperCase().substring(0,1) == 'B') 
                                return false;
                                
                return [inval.replace(/\Wisgraduate\b/, "")];
});

// Is undergraduate function, program type = Minor or Major(with and Degree starts with a 'B'  
                wffuncs.IsUndergraduate = (function(inval, wfrule) {
                //print_debug('\n\nIsUndergraduate\n');
                //print_debug('\ninval =' + inval + '\nwfrule =' + wfrule.toSource() + '\n');
                //print_debug('\program_type = ' + tcfdata.program_type.toSource() + '\n');
                //print_debug('\degreecode = ' + tcfdata.degreecode.toSource() + '\n');
                                
                if (!tcfdata.program_type || !tcfdata.program_type.length)
                                return false;
                else if (tcfdata.program_type[0].code == 'minor') 
                                return [inval.replace(/\Wisundergraduate\b/, "")];
                else if (tcfdata.program_type[0].code == 'major' &&  tcfdata.degreecode[0].code.toUpperCase().substring(0,1) == 'B') 
                                return [inval.replace(/\Wisundergraduate\b/, "")];         
                return false;
});




wffuncs.getCol = function(inval, wfrule, args) {
	print_debug('\ninval =' + inval + '\nwfrule =' + wfrule.toSource() + '\nargs =' + args.toSource() + '\n'  );
	print_debug('args.context = ' + args.context.toString() + '\n');		
	if(args && args.context && args.context == "wforder") {
		print_debug('\nwforder\n');
		if (tcfdata.umbrella.toString() == 'Yes') {
		print_debug('\nUMBRELLA\n')
			return 'UMBRELLA standard'; 
		}
	} else if (args && args.context && args.context == "wfrule") {
			print_debug('\nwfrule\n');
			var ret = [];
			tcfdata.campus.forEach(function(text) {
				ret.push(inval.replace(/Campus/g,text.code.toString()));
			});				
			return ret;         
	} 
	return false;
}

// Set value for Col taking into account UMBRELLA course settings. -- UWLAX
wffuncs.getCollege = function(inval, wfrule, args) {
	//print_debug('\ninval =' + inval + '\nwfrule =' + wfrule.toSource() + '\nargs =' + args.toSource() + '\n'  );
	//print_debug('args.context = ' + args.context.toString() + '\n');		
	if(args && args.context && args.context == "wforder") {
		//print_debug('\nwforder\n');
		if (tcfdata.umbrella.toString() == 'Yes')
			return 'UMBRELLA standard'; 
		else {
			return tcfdata.college[0].code + ' standard'; 
		}		
	} else if (args && args.context && args.context == "wfrule") {
			//print_debug('\nwfrule\n');
			var ret = [];
			ret.push(inval.replace(/Col/g,tcfdata.college[0].code));			
			return ret;         
	} 
	return false;
}


// Is NOT CIM Courses Experimental  (Course numbers of 283, 483 or 783) -- UWGB Courses
wffuncs.IsNotExp = function(inval, wfrule, args) {
	if (tcfdata.course_number && tcfdata.course_number.length ) {
		if (tcfdata.course_number == 283 || tcfdata.course_number == 483 || tcfdata.course_number == 783) {
		return false;	
		}
	}
	return [inval.replace(/\Wisnotexp\b/, "")];
}

// Subject is ACCTG or BUS ADM -- UWGB Courses
wffuncs.IsAcctgOrBusadm = function(inval, wfrule, args) {
	if (tcfdata.subject && tcfdata.subject.length ) {
		if (tcfdata.subject[0].code == 'ACCTG' || tcfdata.subject[0].code == 'BUS ADM') {
			return [inval.replace(/\Wisacctgorbusadm\b/, "")];
		}
	}
	return false;
}

// Subject is NOT ACCTG or BUS ADM -- UWGB Courses
wffuncs.IsNotAcctgOrBusadm = function(inval, wfrule, args) {
	if (tcfdata.subject && tcfdata.subject.length ) {
		if (tcfdata.subject[0].code == 'ACCTG' || tcfdata.subject[0].code == 'BUS ADM') {
		return false;
		}
	}
	return [inval.replace(/\Wisnotacctgorbusadm\b/, "")];
}

// Is the course a special topics course  -- montana
wffuncs.SpecialTopics = function(inval, wfrule, args) {
	//print_debug('\ninval =' + inval + '\nwfrule =' + wfrule.toSource() + '\nargs =' + args.toSource() + '\n'  );
	if(args && args.context && args.context == "wforder") {
		if (!tcfdata.course_number || !tcfdata.course_number.length)
			return false;
		var str = tcfdata.course_number[0];
		str = str.substring(str.length-2,str.length);
		if (str == '91')
			return [inval.replace(wfrule.regex, "Special Topics")];
	}
	return false;
}


print_debug('\ninval = ' + inval + '\nwfrule =' + wfrule.toSource() + '\nargs =' + args.toSource() + '\n');


ret.forEach(function(text) {
	var str = text.toString(); 
	print_debug('ret = ' + str + '\n');
});	


// Set value AcadLevel to pick workflows. -- lehigh
//wfrules:isundergraduate|iffieldmatch|course_number|value<500;
//wfrules:isgraduate|iffieldmatch|course_number|value>=500;
wffuncs.AcadLevel = function(inval, wfrule, args) {
	//print_debug('\ninval =' + inval + '\nwfrule =' + wfrule.toSource() + '\nargs =' + args.toSource() + '\n'  );
	//print_debug('args.context = ' + args.context.toString() + '\n');		
	if(args && args.context && args.context == "wforder") {
		print_doc('<br> in AcadLevel, wfoder <br>');
		if(!tcfdata.course_number || !tcfdata.course_number.length) 
			return false;
		if (tcfdata.course_number<500) {
			return [inval.replace(wfrule.regex, "UG")];	
		} else {
			return [inval.replace(wfrule.regex, "GR")];
		}		
	} 
	return false;
}
