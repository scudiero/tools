
//=================================================================================================
// Add Related subjects / departments / colleges from the course eco system data
// 02-23-2015 - dgs - Updated to pull step names from cimconfig if definded
// 					  relatedDeptsSteps
// 					  relatedColsSteps
// 					  Updated to call AddAdditionalNotifies function if definded
// 06/01/2015 - dgs - Added subject mode
//=================================================================================================
wffuncs.Related = function(inval,wfrule,args){
	var myName=wfrule.attrname; var haveDebug=false; if (typeof(Dump) == "function" && typeof(Debug) == "function") haveDebug=true;
	if (haveDebug) { Debug("\n*** In " + myName + " (" + inval + ") ***"); /*Dump('\t inval',inval); Dump('\t wfrule',wfrule.toSource()); Dump('\t args',args.toSource()); */}

	// Check environment & necessary variables
	if(args && args.context && args.context != "wfrule")
		return false;

	if(!tcfdata.code || !tcfdata.code.length)
		return false;
	var parentCode = tcfdata.code[0];
	if (haveDebug) { Dump('\tparentCode',parentCode); }

	if(!tcfdata.subject || !tcfdata.subject.length)
		return false;
	var parentDept = tcfdata.department[0].code;
	if (haveDebug) { Dump('\tparentDept',parentDept); }

	if(!tcfdata.college || !tcfdata.college.length)
		return false;
	var parentCollege = tcfdata.college[0].code;
	if (haveDebug) { Dump('\tparentCollege',parentCollege); }

	if(!tcfdata.subject || !tcfdata.subject.length)
		return false;
	var parentSubj = tcfdata.subject[0].code;
	if (haveDebug) { Dump('\tparentSubj',parentSubj); }

	// Determin mode (subj / dept / college) based on the mapped name
		var reqType=wfrule.searchfor.toLowerCase();
		var regex = new RegExp('dept|department','i');
		if (regex.test(reqType))
			mode="dept";
		var regex = new RegExp('college|division|director','i');
		if (regex.test(reqType))
			mode="college";
		var regex = new RegExp('subj|subject','i');
		if (regex.test(reqType))
			mode="subject";

	// Main

	// Get referenced subject codes (dept) from courseref
		var sqlStmt="SELECT DISTINCT dept,path FROM courseref WHERE code = ? AND dept <> ? AND dept <> ''";
		var sqlParms=[parentCode, parentDept]
		var resultSet1=dbquery("courseref", sqlStmt,sqlParms);
		if(resultSet1.length == 0) {
				print_debug("\t*Warning* -- Function:" + myName + " -- Page: " + tcfdata.pagename[0] + "\n");
				print_debug("\t\tNo results looking up related subject codes from courseref (key: " + tcfdata.key + ")\n");
				print_debug("\t\tsqlStmt: " + sqlStmt + "\n\t\tsqlPars: " + sqlParms + "\n\t\t" + dbexec(tcfdata.dbname[0],"DBERRORMSG") + "\n");
			return false;
		}
		if (haveDebug) { Dump('resultSet1',resultSet1.toSource()); }


	// Loop through the returned departments (subject codes) and lookup the owning depts from cimlookup
		var depts=[], cols=[], subjs=[];
		resultSet1.forEach(function(result1) {
			if (haveDebug) { Dump('\tDept/Subj from courseref',result1.dept); }
			// If mode = dept or college then assume the dept from above (resultSet1) is a subject code so we need to lookup the department code
			if ( mode == "dept" || mode == "college" ) {
				var sqlStmt="SELECT department,college FROM cimlookup WHERE subject = ? and department <> ?";
					var sqlParms=[result1.dept,parentDept];
					var resultSet2=dbquery("cimcourses",sqlStmt,sqlParms);
					if(resultSet2.length == 0){
						print_debug("\t*Warning* -- Function:" + myName + " -- Page: " + tcfdata.pagename[0] + "\n");
						print_debug("\t\tNo results looking up related department from cimlookup (key: " + tcfdata.key + ")\n");
						print_debug("\t\tsqlStmt: " + sqlStmt + "\n\t\tsqlPars: " + sqlParms + "\n\t\t" + dbexec(tcfdata.dbname[0],"DBERRORMSG") + "\n");
						return false;
					}
					resultSet2.forEach(function(result2) {
						if (haveDebug) { Dump('\t\tDept from cimlookup',result2.department); Dump('\t\tCol from cimlookup',result2.college);}
						depts.push(result2.department);
						cols.push(result2.college);
					}); //resultSet2
			} else {
				// If mode = subj then assume the dept from above (resultSet1) is a subject code 
				subjs.push(result1.dept);				
			}
		}); //resultSet1	

	// See if there is an add function to put more depts on the list
	if (typeof(AddAdditionalNotifies) == "function" ) {
		addNotify=AddAdditionalNotifies(inval, wfrule, args);
		depts=depts.concat(addNotify);
	}

	// Remove dupes from final depts array
	subjs=RemoveDupes(subjs,parentSubj);
	depts=RemoveDupes(depts,parentDept);
	cols=RemoveDupes(cols,parentCollege);

	// generate output array
	var retArray=[];
	if (mode == 'subject') {
		subjs.forEach(function(subj) {
			if (haveDebug) { Dump('\tReturn related subject',subj); }
			if (tcfdata.relatedSubjsSteps && tcfdata.relatedSubjsSteps.length > 0) {
				tcfdata.relatedSubjsSteps.forEach(function(step) {
					retArray.push(step.replace('Subj',subj));
				});
			} else {
				retArray.push(inval.replace(wfrule.regex,subj));
			}
		});
	} else if (mode == 'dept') {
		depts.forEach(function(dept) {
			if (haveDebug) { Dump('\tReturn related department',dept); }
			if (tcfdata.relatedDeptsSteps && tcfdata.relatedDeptsSteps.length > 0) {
				tcfdata.relatedDeptsSteps.forEach(function(step) {
					retArray.push(step.replace('Dept',dept));
				});
			} else {
				retArray.push(inval.replace(wfrule.regex,dept));
			}
		});
	} else if (mode == 'college')  {
		cols.forEach(function(col) {
			if (haveDebug) { Dump('\tReturn related college',col); }
			if (tcfdata.relatedDColsSteps && tcfdata.relatedDColsSteps.length > 0) {
				tcfdata.relatedDColsSteps.forEach(function(step) {
					retArray.push(step.replace('Col',col));
				});
			} else {
				retArray.push(inval.replace(wfrule.regex,col));
			}
		});
	}

	if(!retArray || !retArray.length)
		return false;
	return retArray;
}
