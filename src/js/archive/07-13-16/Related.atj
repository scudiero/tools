
//e.g.config roles
//wfrules:RelatedDepts|function|Related|
//wfrules:RelatedCols|function|Related|
//wfrules:RelatedGraduateDirectors|function|Related
//=================================================================================================
// Add Related departments from the course eco system data
// - if tcfdata.relatedIgnorePages is defined then it is a list of pages to ignore in the courseref
// 		database.
// 		
// 02-23-15 - dgs - Updated to parse call type (depts vs cols) from the wfrule name use.
// 					Updated to call 'AddAdditionalNotifyDepts'  & 'AddAdditionalNotifyCols' function if definded
// 						expects an array of the appropriate data back.
// 09-02-15 - dgs - Added tcfdata.relatedIgnorePages processing
// 					if references is 'programclode:' then assume we have a department code
//=================================================================================================
wffuncs.Related = function(inval,wfrule,args){
	var myName=wfrule.attrname; var haveDebug=false; if (typeof(Dump) == "function" && typeof(Debug) == "function") haveDebug=true;
	if (haveDebug) { Debug("\n*** In " + myName + " (" + inval + ") ***"); /* Dump('\t inval',inval); Dump('\t wfrule',wfrule.toSource()); Dump('\t args',args.toSource()); */ }

	// Check environment & necessary variables
		if(args && args.context && args.context != "wfrule")
			return false;

		if(!tcfdata.code || !tcfdata.code.length)
			return false;
		if(!tcfdata.department || !tcfdata.department.length)
			return false;
		if(!tcfdata.college || !tcfdata.college.length)
			return false;

	// Determin mode (dept / college) based on the mapped name
		var mode="dept";
		var reqType=wfrule.searchfor.toLowerCase();
		var regex = new RegExp('college|division|director','i');
		if (regex.test(reqType))
			mode="college";
		if (haveDebug) { Dump('\t mode',mode); }

	// Main
		var parentCode = tcfdata.code[0];
		var parentDept = tcfdata.department[0].code;
		var parentCollege = tcfdata.college[0].code;
		if (haveDebug) { Dump('\tparentCode',parentCode); Dump('\tparentDept',parentDept); Dump('\tparentCollege',parentCollege); }

	// Get referenced subject codes (dept) from courseref
		var sqlParms=[]
		sqlParms.push(parentCode);
		sqlParms.push(parentDept);
		// if there is an ignore pages liste then build the sqlParms array
			var pathClause=''
			if (tcfdata.relatedIgnorePages && tcfdata.relatedIgnorePages.length > 0) {
				//Dump('relatedIgnorePages',tcfdata.relatedIgnorePages.toSource());
				if (haveDebug) {
					Debug('\tHave Ignore pages data:')
					tcfdata.relatedIgnorePages.forEach(function(page) { Dump('\t\tignorePage',page); });					
				}
				var qMarks='';
				pathClause=' AND path not in (';
				tcfdata.relatedIgnorePages.forEach(function(page) {
					sqlParms.push(page);
					if (qMarks == '') { qMarks='?' } else { qMarks=qMarks + ',?' }
				});
				pathClause=pathClause + qMarks + ')';
			}

		// Run Query 
			var sqlStmt="SELECT DISTINCT path,dept FROM courseref WHERE code = ? AND dept <> ? AND dept <> ''" + pathClause;
			var resultSet1=dbquery("courseref", sqlStmt,sqlParms);
			if(resultSet1.length == 0) {
				//print_debug("\t*Warning* -- No results looking up related subject codes:" + '\n\t\tsqlStmt: ' + sqlStmt + '\n\t\tsqlPars: ' + sqlParms + '\n\t\t' + dbexec(tcfdata.dbname[0],"DBERRORMSG") + "\n");
				if (haveDebug) { Debug("\t *** No related departments found ***"); Debug("*** Ending " + myName + " (" + inval + ") ***"); }
				return false;
			}
			if (haveDebug) { Dump('resultSet1',resultSet1.toSource()); }

	// Loop through the returned departments (subject codes) and lookup the owning depts from cimlookup
		var depts=[], cols=[];
		resultSet1.forEach(function(result1) {
			if (haveDebug) { Dump('\tDept/Subj from courseref',result1.dept); }
			// for programadmin references, we already have the ref dept code
			if (result1.path.substring(1,12) == 'programcode:') {
				depts.push(result1.dept);
				// Lookup the college code assuming 'dept' in the courseref table is a true department code
				if (haveDebug) { Debug("\tPath type is 'programcode:', department = '" + result1.dept + "', looking up college"); }
				var sqlStmt="SELECT college FROM cimlookup WHERE department = ?";
				var sqlParms=[result1.dept];
				var resultSet2=dbquery("cimcourses",sqlStmt,sqlParms);
				resultSet2.forEach(function(result2) {
					if (haveDebug) { Dump('\t\tDept from cimlookup',result2.department); Dump('\t\tCol from cimlookup',result2.college);}
					cols.push(result2.college);
				});	
			} else {
				// Lookup the department code assuming 'dept' in the courseref table is a subject code
				if (haveDebug) { Debug("\tLooking up department & college assuming '" + result1.dept + "' is a subject code"); }
				var sqlStmt="SELECT department,college FROM cimlookup WHERE subject = ? and department <> ?";
				var sqlParms=[result1.dept,parentDept];
				var resultSet2=dbquery("cimcourses",sqlStmt,sqlParms);
				resultSet2.forEach(function(result2) {
					if (haveDebug) { Dump('\t\tDept from cimlookup',result2.department); Dump('\t\tCol from cimlookup',result2.college);}
					depts.push(result2.department);
					cols.push(result2.college);
				});				
			}
		}); // resultSet1



	// See if there is an add function to put more depts on the list
		if (typeof(AddAdditionalNotifies) == "function" ) { 
			addNotify=AddAdditionalNotifies(inval, wfrule, args);
			depts=depts.concat(addNotify);
		}

	// See if there is an add function to put more depts on the list
		if (typeof(AddAdditionalNotifyDepts) == "function" ) { 
			var addDepts=AddAdditionalNotifyDepts(inval, wfrule, args);
			depts=depts.concat(addDepts);
		}
		if (typeof(AddAdditionalNotifyCols) == "function" ) { 
			var addCols=AddAdditionalNotifyCols(inval, wfrule, args);
			cols=cols.concat(addCols);
		}

	// Remove dupes from final depts array
		depts=RemoveDupes(depts);
		cols=RemoveDupes(cols);

	// generate output array
	var retArray=[];
		if (mode == 'dept') {
			depts.forEach(function(dept) {
				if (haveDebug) { Dump('\tReturn related dept',dept); }
				retArray.push(inval.replace(wfrule.regex,dept));	
			});	
		} else {
			cols.forEach(function(col) {
				if (haveDebug) { Dump('\tReturn related col',col); }
				retArray.push(inval.replace(wfrule.regex,col));	
			});
		}

		if (haveDebug) { Debug("\t *** " + retArray.length + " related departments found ***"); Debug("*** Ending " + myName + " (" + inval + ") ***"); }
		if(!retArray || !retArray.length)
			return false;
		return retArray;
}