
//*** START WORKFLOW ELEMENTS ***//
//Set debug on (true) or off (false) -- only applys to DEV env.
debugDev:true

//*** END WORKFLOW ELEMENTS ***//

//=================================================================================================
// Helper function to print a formatted debug message or dump a variable
// Syntax: 	Debug(string [,mode])
//			Dump(varName,varValue [,mode,callerName])
//			mode in {'D','S','B'}  D=print_debug, S=print_doc, B=both
//			if mode is numeric then it is the message Level 
//
//=================================================================================================
// 08/22/2014 -- dgs -- New
// 10/31/2014 -- dgs -- tweaked the 'Under Construction' stuff 
// 12/10/2014 -- dgs -- Cleand up things a bit
// 12/17/2014 -- dgs -- Removed meglevel,
// 02/10/2015 -- dgs -- Added message level back. 
//=================================================================================================
// Set Globals
if (typeof DebugFirstRun == "undefined") var DebugFirstRun=true;

function Debug(text,mode,level){
	var myName=arguments.callee.toString(); myName=myName.substr('function '.length); myName=myName.substr(0, myName.indexOf('('));

	// If not running on dev then return
		var host=getenv("HTTP_HOST")
		if (host.indexOf('.dev') < 0)
			return;
	// If debugDev != true then quit
		if (typeof tcfdata.debugDev == "undefined") 
			return;
		if (tcfdata.debugDev != 'true') 
			return;

	// Set variables if this is not a full call
		if (arguments.length < 1) {
		print_debug('* Error * -- Invalid call to "' + myName +'", insufficinent arguments passed' );
			return;
		}

	// Set level and mode if necessary
		if (mode == undefined) mode='D';
		if (typeof mode == 'number') { mode='D'; level=mode; }
		if (level == undefined) level=0;

	// Check against debugLevel
		if (tcfdata.debugLevel == undefined) tcfdata.debugLevel=2;
		if (tcfdata.debugLevel < level) return;

	// If first run then print out header
		if (DebugFirstRun) { 
			print_doc('<strong><em>*Warning*</strong> -- Workflow currently under construction, results may be suspect</em><br>');
			DebugFirstRun=false; 
		}

	// Print message
		mode=mode.toUpperCase()
		if ( mode == 'D' || mode == 'B' )
			print_debug(text + ' \n')
		if ( mode == 'S' || mode == 'B' )
			print_doc("&nbsp;&nbsp;&nbsp;" + text + ' <br>')
	return;
}

function Dump(varName,varValue,mode,callerName){
	var myName=arguments.callee.toString(); myName=myName.substr('function '.length); myName=myName.substr(0, myName.indexOf('('));
	// Set variables if this is not a full call
	if (arguments.length < 2) {
		print_debug('* Error * -- Invalid call to "' + myName +'", insufficinent arguments passed' );
		return;
	}
	text=varName + ' = >' + varValue + '<'
	Debug(text,mode,callerName)
}

function Here(id) {
	print_debug('Here ' + id + '\n');
} 

//==============================================================================================
// Helper function to check to see if a variable has a value, if not then print a message and return false
// e.g. if (! CheckForVal(tcfdata.rotation,'Course Rotation',ChangeTypeFirstRun)) { ChangeTypeFirstRun=false; return false; }
//==============================================================================================
function CheckForVal(varName,varValue) {
	//print_debug('\tvarName = ' + varName + ', varValue =' + varValue + ',varValue.length  = ' + varValue.length + '\n');
	if (!varValue || !varValue.length) {
		print_doc('&nbsp;&nbsp;<strong>*WARNING*</strong> -- Data Field&nbsp;&nbsp;<em>\'' + varName + '\'</em>&nbsp;&nbsp;does not have a value, workflow calculation incomplete.<br>');
		return false;
	}
	return true;
}

