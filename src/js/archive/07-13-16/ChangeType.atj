//
//wfrules:ChangeType|function|GetChangeTypeWorkflow
//wforder:ChangeType Subj
//wforder:ChangeType Dept
//wforder:ChangeType Col
//wforder:ChangeType
//
//=================================================================================================
// Return workflow selection based on proposal change type
// 09/07/2015 - dgs - new -- 
//=================================================================================================
wffuncs.GetChangeTypeWorkflow = function(inval, wfrule, args) {
	var myName=wfrule.attrname;
	// Helper functions
	debug = function(myArgs) { if (typeof(Debug) != "function") return; Debug(myArgs); }
	dump = function(name,val) { if (typeof(Debug) != "function" || typeof(Dump) != "function" ) return; Dump(name,val); }
	debug('\n*** In ' + myName + ' ***') /*dump('\tinval',inval); dump('\twfrule',wfrule.toSource()); dump('\targs',args.toSource()); */

	 //Try block encapsulated main function
	 try {
		if(args && args.context && args.context != "wforder")
	 		throw "\t*** Failed rule type check";

		if (!tcfdata.change_type || !tcfdata.change_type.length) {
			debug("\ttcfdata.change_type is null, returning workflow = 'standard'")
	 		return ['standard'];
	 	}

		dump('\ttcfdata.change_type',tcfdata.change_type.toSource())

	 	var mode='NonSubstantive'
	 	if (tcfdata.change_type[0].code == 'S')
	 		mode='Substantive'

	 	var workflow=inval.replace(wfrule.regex,mode)
		dump('\tReturn workflow',workflow)
	 	return [workflow];
		} //Try block

	//Catch block for errors thrown in above try block
	catch(err) { if (typeof(Debug) == "function") { Debug(err); } else { throw err } return false; }
	// Should never get here
	return false;
}
